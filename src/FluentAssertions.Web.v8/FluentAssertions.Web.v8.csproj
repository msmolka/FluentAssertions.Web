<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <PackageDescription>
      This is a FluentAssertions extension over the HttpResponseMessage object.
      It provides specific assertions and outputs rich erros messages that include the HTTP Request and Response.
      This version depends on the commercial version of the FluentAssertions library (&gt;= 8.0.0).
    </PackageDescription>
    <PackageReadmeFile>readme.md</PackageReadmeFile>
  </PropertyGroup>

  <PropertyGroup>
    <DefineConstants>$(DefineConstants);FAV8</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="FluentAssertions" VersionOverride="8.0.0" />
    <PackageReference Include="System.Text.Json" />
    <PackageReference Include="Microsoft.AspNet.WebApi.Client" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\FluentAssertions.Web.Types\FluentAssertions.Web.Types.csproj" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <None Include="../../readme.md" Pack="true" PackagePath="\" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="..\FluentAssertions.Web\**\*.*" Exclude="**\bin\**;**\obj\**;**\Properties\**;**\*.csproj">
      <Link>%(RecursiveDir)%(Filename)%(Extension)</Link>
      <PackagePath>$(ContentTargetFolders)\src\%RecursiveDir%</PackagePath>
    </Compile>
  </ItemGroup>

  <PropertyGroup>
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
  </PropertyGroup>

  <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">
    <ItemGroup>
      <!-- Filter out unnecessary files -->
      <_ReferenceCopyLocalPaths Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')-&gt;WithMetadataValue('PrivateAssets', 'all'))" />
    </ItemGroup>

    <!-- Print batches for debug purposes -->
    <Message Text="Batch for .nupkg: ReferenceCopyLocalPaths = @(_ReferenceCopyLocalPaths), ReferenceCopyLocalPaths.DestinationSubDirectory = %(_ReferenceCopyLocalPaths.DestinationSubDirectory) Filename = %(_ReferenceCopyLocalPaths.Filename) Extension = %(_ReferenceCopyLocalPaths.Extension)" Importance="High" Condition="'@(_ReferenceCopyLocalPaths)' != ''" />

    <ItemGroup>
      <!-- Add file to package with consideration of sub folder. If empty, the root folder is chosen. -->
      <BuildOutputInPackage Include="@(_ReferenceCopyLocalPaths)" TargetPath="%(_ReferenceCopyLocalPaths.DestinationSubDirectory)" />
    </ItemGroup>
  </Target>

</Project>
